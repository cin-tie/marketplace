services: 
  frontend:
    build:
      context: ./marketplace-frontend
      dockerfile: Dockerfile
    depends_on: 
      - backend
    ports:
      - "80:3000"
    networks:
      - app-network

  database:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postuser 
      POSTGRES_PASSWORD: postpass
      POSTGRES_DB: marketplace
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postuser -d marketplace"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    
  backend:
    image: your-spring-boot-app
    build:
      context: ./marketplace-backend
      dockerfile: dockerFile
    environment:
      - APP_API_KEY=${API_KEY}
      - APP_API_KEY_HEADER=X-API-KEY
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - database

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:9.3
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/li
    networks:
      - app-network
    depends_on:
      - database

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network
  
  telegram-bot:
    build:
      context: ./marketplace-telegram-bot
      dockerfile: DockerFile
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - BACKEND_URL=${BACKEND_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - LOG_LEVEL=${LOG_LEVEL}
      - API_KEY=${API_KEY}
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=postuser
      - DB_PASSWORD=postpass
      - DB_NAME=marketplace
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - python-cache:/root/.cache/pip
      - local-packages:/root/.local

volumes:
  db-data:
  pgadmin-data:
  python-cache:
  local-packages:

networks:
  app-network:
    driver: bridge